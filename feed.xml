<feed xmlns="https://www.w3.org/2005/Atom"> <id>https://code-delivery.me/</id><title>코드 배달부</title><subtitle>🛵.... 거스의 블로그 - 생산적인 코드를 꾸준히 메모하고 최대한 친절하게 설명합니다. 😎</subtitle> <updated>2021-03-17T15:18:17+09:00</updated> <author> <name>안진우</name> <uri>https://code-delivery.me/</uri> </author><link rel="self" type="application/atom+xml" href="https://code-delivery.me/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://code-delivery.me/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 안진우 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>개발일지 3월 17일</title><link href="https://code-delivery.me/posts/2021-03-17/" rel="alternate" type="text/html" title="개발일지 3월 17일" /><published>2021-03-17T14:16:00+09:00</published> <updated>2021-03-17T15:05:09+09:00</updated> <id>https://code-delivery.me/posts/2021-03-17/</id> <content src="https://code-delivery.me/posts/2021-03-17/" /> <author> <name>안진우</name> </author> <category term="개발일지" /> <category term="2021년" /> <summary> Springboot + Gradle + MariaDB + MyBatis + log4j2 다음과 같은 설정 파일들로 구성할 수 있다. build.gradle dependencies { //DB implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.2' //Logging implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16' // MyBatis implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1' } src/main/resources/application.... </summary> </entry> <entry><title>개발일지 3월 16일</title><link href="https://code-delivery.me/posts/2021-03-16/" rel="alternate" type="text/html" title="개발일지 3월 16일" /><published>2021-03-16T10:34:00+09:00</published> <updated>2021-03-17T15:18:00+09:00</updated> <id>https://code-delivery.me/posts/2021-03-16/</id> <content src="https://code-delivery.me/posts/2021-03-16/" /> <author> <name>안진우</name> </author> <category term="개발일지" /> <category term="2021년" /> <summary> [Java] private static final long serialVersionUID = 1L Q. 스프링부트 프로젝트에서 RuntimeException을 상속받은 클래스에는 왜 serializableVersionUID 변수를 선언할까? public class SystemException extends RuntimeException { private static final long serialVersionUID = 1L; ... } A. RuntimeException extends Exception, Exception extends Throwable, Throwable implements Serializable. 따라서 내가 만든 SystemException은 Serializabl... </summary> </entry> <entry><title>VSCode SSH 에러</title><link href="https://code-delivery.me/posts/Err-vscode-1/" rel="alternate" type="text/html" title="VSCode SSH 에러" /><published>2021-03-07T22:32:00+09:00</published> <updated>2021-03-08T00:13:03+09:00</updated> <id>https://code-delivery.me/posts/Err-vscode-1/</id> <content src="https://code-delivery.me/posts/Err-vscode-1/" /> <author> <name>안진우</name> </author> <category term="오류해결" /> <category term="VSCode" /> <summary> VSCode 는 쓰다보면 항상 Remote - SSH 익스텐션이 말성이다. 악에 받쳐서 여기다가 정리하기 시작한다. 1. Bad owner or permissions on C:\\Users\\gus/.ssh/config 발견 날짜: 2021-03-07 로그: [22:26:52.249] Running script with connection command: ssh -T -D 51979 local bash [22:26:52.255] Terminal shell path: C:\WINDOWS\System32\cmd.exe [22:26:52.355] &amp;gt; Bad owner or permissions on C:\\Users\\gus/.ssh/config &amp;gt; ]0;C:\WINDOWS\Sys... </summary> </entry> <entry><title>Jupyter Notebook + Ngrok으로 어디서든 서버 접근</title><link href="https://code-delivery.me/posts/jupyter-notebook-and-ngrok/" rel="alternate" type="text/html" title="Jupyter Notebook + Ngrok으로 어디서든 서버 접근" /><published>2021-02-22T10:57:00+09:00</published> <updated>2021-02-22T16:10:43+09:00</updated> <id>https://code-delivery.me/posts/jupyter-notebook-and-ngrok/</id> <content src="https://code-delivery.me/posts/jupyter-notebook-and-ngrok/" /> <author> <name>안진우</name> </author> <category term="Python" /> <category term="Jupyter Notebook" /> <summary> Jupyter Notebook은 파이썬 코딩을 위해 개발된 아주 편리한 웹 베이스 도구입니다. 코드를 줄 단위로 지정하여 실행해 볼 수 있습니다! 신박하죠?😃 나아가 Jupyter를 이용하면 어디에서든 서버 컴퓨터에 접근하여 코드작성 및 관리할 수 있는 환경을 구축할 수 있습니다. 저는 핸드폰으로도 제 서버에 접근하여 알고리즘 문제를 풀 수 있도록 이 기능을 선택했습니다. 이 가이드는 Ubuntu 운영체제 기반입니다 Table of Contents 1. 설치 1.1. Python3 1.2. Python3-pip 1.3. Jupyter Notebook 2. Jupyter Notebook 설정 2.1. 비밀번호... </summary> </entry> <entry><title>Hyperledger Fabric 설치부터 test-network 구동까지</title><link href="https://code-delivery.me/posts/fabric-getting-started/" rel="alternate" type="text/html" title="Hyperledger Fabric 설치부터 test-network 구동까지" /><published>2021-02-03T09:16:00+09:00</published> <updated>2021-02-22T16:01:52+09:00</updated> <id>https://code-delivery.me/posts/fabric-getting-started/</id> <content src="https://code-delivery.me/posts/fabric-getting-started/" /> <author> <name>안진우</name> </author> <category term="블록체인" /> <category term="Hyperledger Fabric" /> <summary> 이번 포스팅에서는 Hyperledger Fabric (HLF) 의 공식 문서를 참고하여 2.2버젼을 기준으로 설치하고 프라이빗 블록체인 네트워크를 개인 컴퓨터에 구동해보겠습니다! 😃 Table of Contents 1. 들어가며 1.1. Private Blockchain이란❔ 2. Prerequisites 2.1. Git 2.2. curl 2.3. Docker 2.4. Docker Compose 3. Install Samples, Binaries, and Docker Images 3.1. Samples 확인 3.2. Binaries 확인 3.3. ... </summary> </entry> </feed>
